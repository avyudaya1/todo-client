{"version":3,"sources":["context/auth.js","util/AuthRoute.js","components/MenuBar.js","util/graphql.js","util/MyPopup.js","components/DeleteButton.js","components/ToggleButton.js","components/TodoCard.js","util/hooks.js","components/TodoForm.js","pages/Home.js","pages/Login.js","pages/Register.js","App.js","ApolloProvider.js","index.js"],"names":["initialState","user","localStorage","getItem","decodedToken","jwtDecode","exp","Date","now","removeItem","AuthContext","createContext","login","userData","logout","authReducer","state","action","type","payload","AuthProvider","props","useReducer","dispatch","Provider","value","setItem","token","AuthRoute","Component","component","rest","useContext","render","to","MenuBar","pathname","window","location","path","substr","useState","activeItem","setActiveItem","handleItemClick","e","name","Menu","pointing","secondary","size","color","Icon","style","margin","marginRight","Item","onClick","as","Link","username","active","position","FETCH_TODOS_QUERY","gql","MyPopup","content","children","Popup","inverted","trigger","DELETE_TODO_MUTATION","DeleteButton","todoId","callback","confirmOpen","setConfirmOpen","useMutation","update","proxy","todos","readQuery","query","getTodos","filter","t","id","writeQuery","data","variables","deleteTodoMutation","Container","Button","circular","icon","floated","Confirm","open","onCancel","onConfirm","TOGGLE_TODO_MUTATION","ToggleButton","isCompleted","mutation","status","toggleTodoMutation","display","justifyContent","alignItems","TodoCard","todo","body","createdAt","Card","fluid","Content","Header","useForm","values","setValues","onChange","event","target","onSubmit","preventDefault","CREATE_TODO_MUTATION","TodoForm","createTodo","result","error","Form","Field","Input","placeholder","className","marginBottom","graphQLErrors","message","Home","useQuery","loading","Grid","Row","Divider","Transition","Group","map","textAlign","marginTop","LOGIN_USER","Login","context","errors","setErrors","LoginUser","password","_","reload","then","history","push","onError","err","extensions","exception","noValidate","label","primary","Object","keys","length","REGISTER_USER","Register","addUser","email","confirmPassword","register","App","basename","process","Route","exact","httpLink","createHttpLink","uri","authLink","setContext","headers","Authorization","client","ApolloClient","link","concat","cache","InMemoryCache","ReactDOM","ApolloProvider","document","getElementById"],"mappings":"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","file":"static/js/main.b30cfde2.chunk.js","sourcesContent":["import React, { useReducer, createContext } from 'react';\r\nimport jwtDecode from 'jwt-decode';\r\n\r\nconst initialState = {\r\n  user: null\r\n};\r\n\r\nif (localStorage.getItem('jwtToken')) {\r\n  const decodedToken = jwtDecode(localStorage.getItem('jwtToken'));\r\n\r\n  if (decodedToken.exp * 1000 < Date.now()) {\r\n    localStorage.removeItem('jwtToken');\r\n  } else {\r\n    initialState.user = decodedToken;\r\n  }\r\n}\r\n\r\nconst AuthContext = createContext({\r\n  user: null,\r\n  login: (userData) => {},\r\n  logout: () => {}\r\n});\r\n\r\nfunction authReducer(state, action) {\r\n  switch (action.type) {\r\n    case 'LOGIN':\r\n      return {\r\n        ...state,\r\n        user: action.payload\r\n      };\r\n    case 'LOGOUT':\r\n      return {\r\n        ...state,\r\n        user: null\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction AuthProvider(props) {\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  function login(userData) {\r\n    localStorage.setItem('jwtToken', userData.token);\r\n    dispatch({\r\n      type: 'LOGIN',\r\n      payload: userData\r\n    });\r\n  }\r\n\r\n  function logout() {\r\n    localStorage.removeItem('jwtToken');\r\n    dispatch({ type: 'LOGOUT' });\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{ user: state.user, login, logout }}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nexport { AuthContext, AuthProvider };\r\n","import React, { useContext } from 'react'\r\nimport {Route, Redirect} from 'react-router-dom'\r\n\r\nimport {AuthContext} from '../context/auth'\r\n\r\nfunction AuthRoute({component: Component, ...rest }) {\r\n    const { user } = useContext(AuthContext)\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) =>\r\n                user ? <Redirect to=\"/\" /> : <Component {...props} />\r\n            }\r\n        />\r\n    )\r\n}\r\n\r\nexport default AuthRoute;","import React, { useContext, useState } from \"react\";\r\nimport { Menu, Icon } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { AuthContext } from \"../context/auth\";\r\n\r\nfunction MenuBar() {\r\n  const { user, logout } = useContext(AuthContext);\r\n  const pathname = window.location.pathname;\r\n\r\n  const path = pathname === \"/\" ? \"home\" : pathname.substr(1);\r\n  const [activeItem, setActiveItem] = useState(path);\r\n\r\n  const handleItemClick = (e, { name }) => setActiveItem(name);\r\n\r\n  const menuBar = user ? (\r\n    <Menu pointing secondary size=\"massive\" color=\"red\">\r\n      <Icon\r\n        name=\"sticky note\"\r\n        color=\"red\"\r\n        size=\"big\"\r\n        style={{ margin: 10, marginRight: 0 }}\r\n      />\r\n      <Menu.Item name=\"TODO\" onClick={handleItemClick} as={Link} to=\"/\" />\r\n      <Menu.Item name={user.username} active as={Link} to=\"/\" />\r\n\r\n      <Menu.Menu position=\"right\">\r\n        <Menu.Item name=\"logout\" onClick={logout} />\r\n      </Menu.Menu>\r\n    </Menu>\r\n  ) : (\r\n    <Menu pointing secondary size=\"massive\" color=\"red\">\r\n      <Icon\r\n        name=\"sticky note\"\r\n        color=\"red\"\r\n        size=\"big\"\r\n        style={{ margin: 10, marginRight: 0 }}\r\n      />\r\n      <Menu.Item name=\"TODO\" onClick={handleItemClick} as={Link} to=\"/\" />\r\n      <Menu.Item\r\n        name=\"login\"\r\n        active={activeItem === \"login\"}\r\n        onClick={handleItemClick}\r\n        as={Link}\r\n        to=\"/login\"\r\n      />\r\n      <Menu.Item\r\n        name=\"register\"\r\n        active={activeItem === \"register\"}\r\n        onClick={handleItemClick}\r\n        as={Link}\r\n        to=\"/register\"\r\n      />\r\n      {/* </Menu.Menu> */}\r\n    </Menu>\r\n  );\r\n\r\n  return menuBar;\r\n}\r\n\r\nexport default MenuBar;\r\n","import gql from 'graphql-tag'\r\n\r\nexport const FETCH_TODOS_QUERY = gql`\r\n    {\r\n        getTodos{\r\n            id\r\n            body\r\n            isCompleted\r\n            username\r\n            createdAt\r\n        }\r\n    }\r\n`","import { Popup } from 'semantic-ui-react';\r\nimport React from 'react';\r\n\r\nfunction MyPopup({ content, children }) {\r\n  return <Popup inverted content={content} trigger={children} />;\r\n}\r\n\r\nexport default MyPopup;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { Button, Confirm, Container } from \"semantic-ui-react\";\r\n\r\nimport { FETCH_TODOS_QUERY } from \"../util/graphql\";\r\nimport MyPopup from \"../util/MyPopup\";\r\n\r\nfunction DeleteButton({ todoId, callback }) {\r\n  const [confirmOpen, setConfirmOpen] = useState(false);\r\n\r\n  const [deleteTodoMutation] = useMutation(DELETE_TODO_MUTATION, {\r\n    update(proxy) {\r\n      setConfirmOpen(false);\r\n      const data = proxy.readQuery({\r\n        query: FETCH_TODOS_QUERY,\r\n      });\r\n      const todos = data.getTodos.filter((t) => t.id !== todoId);\r\n      proxy.writeQuery({\r\n        query: FETCH_TODOS_QUERY,\r\n        data: { getTodos: todos },\r\n      });\r\n      if (callback) callback();\r\n    },\r\n    variables: {\r\n      todoId,\r\n    },\r\n  });\r\n  return (\r\n    <>\r\n      <MyPopup content={\"Delete todo?\"}>\r\n        <Container>\r\n          <Button\r\n            circular\r\n            size=\"tiny\"\r\n            color=\"red\"\r\n            icon=\"delete\"\r\n            floated=\"right\"\r\n            onClick={() => setConfirmOpen(true)}\r\n          ></Button>\r\n        </Container>\r\n      </MyPopup>\r\n      <Confirm\r\n        open={confirmOpen}\r\n        onCancel={() => setConfirmOpen(false)}\r\n        onConfirm={deleteTodoMutation}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nconst DELETE_TODO_MUTATION = gql`\r\n  mutation deleteTodo($todoId: ID!) {\r\n    deleteTodo(todoId: $todoId)\r\n  }\r\n`;\r\n\r\nexport default DeleteButton;\r\n","import gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { Button } from \"semantic-ui-react\";\r\n\r\nimport { FETCH_TODOS_QUERY } from \"../util/graphql\";\r\n\r\nfunction ToggleButton({ todoId, isCompleted, callback }) {\r\n  const mutation = TOGGLE_TODO_MUTATION;\r\n\r\n  var status = isCompleted;\r\n\r\n  const [toggleTodoMutation] = useMutation(mutation, {\r\n    update(proxy) {\r\n      const data = proxy.readQuery({\r\n        query: FETCH_TODOS_QUERY,\r\n      });\r\n      const todos = data.getTodos;\r\n      proxy.writeQuery({\r\n        query: FETCH_TODOS_QUERY,\r\n        data: { getTodos: todos },\r\n      });\r\n      if (callback) callback();\r\n    },\r\n    variables: {\r\n      todoId,\r\n    },\r\n  });\r\n  return (\r\n    <Button\r\n      circular\r\n      size=\"medium\"\r\n      icon={status ? \"check\" : \"circle outline\"}\r\n      color={status ? \"green\" : \"grey\"}\r\n      floated=\"left\"\r\n      onClick={() => toggleTodoMutation()}\r\n      style={{\r\n        marginRight: 20,\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      }}\r\n    ></Button>\r\n  );\r\n}\r\n\r\nconst TOGGLE_TODO_MUTATION = gql`\r\n  mutation toggleTodoMutation($todoId: ID!) {\r\n    toggleTodoStatus(todoId: $todoId) {\r\n      id\r\n      username\r\n      body\r\n      createdAt\r\n      isCompleted\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ToggleButton;\r\n","import { useContext } from \"react\";\r\nimport { AuthContext } from \"../context/auth\";\r\n\r\nimport { Card } from \"semantic-ui-react\";\r\nimport DeleteButton from \"./DeleteButton\";\r\nimport ToggleButton from \"./ToggleButton\";\r\n\r\nfunction TodoCard({ todo: { body, id, createdAt, username, isCompleted } }) {\r\n  const { user } = useContext(AuthContext);\r\n\r\n  return (\r\n    <Card fluid>\r\n      <Card.Content>\r\n        {user && user.username === username && <DeleteButton todoId={id} />}\r\n        {user && user.username === username && (\r\n          <ToggleButton todoId={id} isCompleted={isCompleted} />\r\n        )}\r\n        <Card.Header>{body}</Card.Header>\r\n        {/* <Card.Meta>{moment(createdAt).fromNow(true)} ago</Card.Meta> */}\r\n      </Card.Content>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default TodoCard;\r\n","import { useState } from 'react';\r\n\r\nexport const useForm = (callback, initialState = {}) => {\r\n  const [values, setValues] = useState(initialState);\r\n\r\n  const onChange = (event) => {\r\n    setValues({ ...values, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    callback();\r\n  };\r\n\r\n  return {\r\n    onChange,\r\n    onSubmit,\r\n    values\r\n  };\r\n};","import React from \"react\";\r\nimport { Button, Form } from \"semantic-ui-react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/client\";\r\n\r\nimport { useForm } from \"../util/hooks\";\r\nimport { FETCH_TODOS_QUERY } from \"../util/graphql\";\r\n\r\nfunction TodoForm() {\r\n  const { values, onChange, onSubmit } = useForm(createTodoCallback, {\r\n    body: \"\",\r\n  });\r\n\r\n  const [createTodo, { error }] = useMutation(CREATE_TODO_MUTATION, {\r\n    variables: values,\r\n    update(proxy, result) {\r\n      const data = proxy.readQuery({\r\n        query: FETCH_TODOS_QUERY,\r\n      });\r\n      const todos = [result.data.createTodo, ...data.getTodos];\r\n      proxy.writeQuery({ query: FETCH_TODOS_QUERY, data: { getTodos: todos } });\r\n      values.body = \"\";\r\n    },\r\n  });\r\n\r\n  function createTodoCallback() {\r\n    createTodo();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Form onSubmit={onSubmit}>\r\n        <h2>Create a todo:</h2>\r\n        <Form.Field>\r\n          <Form.Input\r\n            placeholder=\"Water plants.\"\r\n            name=\"body\"\r\n            onChange={onChange}\r\n            value={values.body}\r\n            error={error ? true : false}\r\n          />\r\n          <Button type=\"submit\" color=\"red\">\r\n            Submit\r\n          </Button>\r\n        </Form.Field>\r\n      </Form>\r\n      {error && (\r\n        <div className=\"ui error message\" style={{ marginBottom: 20 }}>\r\n          <ul className=\"list\">\r\n            <li>{error.graphQLErrors[0] && error.graphQLErrors[0].message}</li>\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nconst CREATE_TODO_MUTATION = gql`\r\n  mutation createTodo($body: String!) {\r\n    createTodo(body: $body) {\r\n      id\r\n      body\r\n      createdAt\r\n      username\r\n      isCompleted\r\n    }\r\n  }\r\n`;\r\n\r\nexport default TodoForm;","import { useQuery } from \"@apollo/client\";\r\nimport React, { useContext } from \"react\";\r\n\r\nimport { Grid, Transition, Container, Divider, Icon } from \"semantic-ui-react\";\r\n\r\nimport { AuthContext } from \"../context/auth\";\r\nimport { FETCH_TODOS_QUERY } from \"../util/graphql\";\r\n\r\nimport TodoCard from \"../components/TodoCard\";\r\nimport TodoForm from \"../components/TodoForm\";\r\n\r\nfunction Home() {\r\n  const { user } = useContext(AuthContext);\r\n  const { loading, data: { getTodos: todos } = {} } = useQuery(\r\n    FETCH_TODOS_QUERY\r\n  );\r\n\r\n  return (\r\n    <Container>\r\n      {user ? (\r\n        <Container>\r\n          {\r\n            <Grid.Row>\r\n              <TodoForm />\r\n            </Grid.Row>\r\n          }\r\n          {<Divider />}\r\n          {loading ? (\r\n            <h1>Loading Todos...</h1>\r\n          ) : (\r\n            <Transition.Group>\r\n              {todos &&\r\n                todos.map((todo) => (\r\n                  <Grid.Row key={todo.id}>\r\n                    <TodoCard todo={todo} />\r\n                  </Grid.Row>\r\n                ))}\r\n            </Transition.Group>\r\n          )}\r\n        </Container>\r\n      ) : (\r\n        <Container textAlign=\"center\">\r\n          <h1 style={{ marginTop: 20, marginBottom: 20 }}>\r\n            Login or Register to use TODO\r\n          </h1>\r\n          <Icon name=\"sticky note\" size=\"massive\" color=\"grey\" />\r\n        </Container>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import { useState, useContext } from \"react\";\r\nimport { Button, Form } from \"semantic-ui-react\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport gql from \"graphql-tag\";\r\n\r\nimport { AuthContext } from \"../context/auth\";\r\nimport { useForm } from \"../util/hooks\";\r\n\r\nfunction Login(props, { callback }) {\r\n  const context = useContext(AuthContext);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const { onChange, onSubmit, values } = useForm(loginUserCallback, {\r\n    username: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [LoginUser, { loading }] = useMutation(LOGIN_USER, {\r\n    update(_, { data: { login: userData } }) {\r\n      context.login(userData);\r\n      window.location.reload().then(() => props.history.push(\"/\"));\r\n    },\r\n    onError(err) {\r\n      if (err.graphQLErrors[0].extensions.exception.errors) {\r\n        setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n      }\r\n    },\r\n    variables: values,\r\n  });\r\n\r\n  function loginUserCallback() {\r\n    LoginUser();\r\n  }\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <Form onSubmit={onSubmit} noValidate className={loading ? \"loading\" : \"\"}>\r\n        <h1>Login</h1>\r\n        <Form.Input\r\n          label=\"Username\"\r\n          placeholder=\"Username..\"\r\n          name=\"username\"\r\n          type=\"text\"\r\n          value={values.username}\r\n          error={errors.username ? true : false}\r\n          onChange={onChange}\r\n        />\r\n        <Form.Input\r\n          label=\"Password\"\r\n          placeholder=\"Password..\"\r\n          name=\"password\"\r\n          type=\"password\"\r\n          value={values.password}\r\n          error={errors.password ? true : false}\r\n          onChange={onChange}\r\n        />\r\n        <Button type=\"submit\" primary>\r\n          Login\r\n        </Button>\r\n      </Form>\r\n      {Object.keys(errors).length > 0 && (\r\n        <div className=\"ui error message\">\r\n          <ul className=\"list\">\r\n            {Object.values(errors).map((value) => (\r\n              <li key={value}>{value}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst LOGIN_USER = gql`\r\n  mutation login($username: String!, $password: String!) {\r\n    login(username: $username, password: $password) {\r\n      id\r\n      email\r\n      username\r\n      createdAt\r\n      token\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Login;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { Button, Form } from \"semantic-ui-react\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport gql from \"graphql-tag\";\r\n\r\nimport { AuthContext } from \"../context/auth\";\r\nimport { useForm } from \"../util/hooks\";\r\n\r\nfunction Register(props) {\r\n  const context = useContext(AuthContext);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const { onChange, onSubmit, values } = useForm(registerUser, {\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n\r\n  const [addUser, { loading }] = useMutation(REGISTER_USER, {\r\n    update(_, { data: { register: userData } }) {\r\n      context.login(userData);\r\n      window.location.reload().then(() => props.history.push(\"/\"));\r\n    },\r\n    onError(err) {\r\n      if (err.graphQLErrors[0].extensions.exception.errors) {\r\n        setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n      }\r\n    },\r\n    variables: values,\r\n  });\r\n\r\n  function registerUser() {\r\n    addUser();\r\n  }\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <Form onSubmit={onSubmit} noValidate className={loading ? \"loading\" : \"\"}>\r\n        <h1>Register</h1>\r\n        <Form.Input\r\n          label=\"Username\"\r\n          placeholder=\"Username..\"\r\n          name=\"username\"\r\n          type=\"text\"\r\n          value={values.username}\r\n          error={errors.username ? true : false}\r\n          onChange={onChange}\r\n        />\r\n        <Form.Input\r\n          label=\"Email\"\r\n          placeholder=\"Email..\"\r\n          name=\"email\"\r\n          type=\"email\"\r\n          value={values.email}\r\n          error={errors.email ? true : false}\r\n          onChange={onChange}\r\n        />\r\n        <Form.Input\r\n          label=\"Password\"\r\n          placeholder=\"Password..\"\r\n          name=\"password\"\r\n          type=\"password\"\r\n          value={values.password}\r\n          error={errors.password ? true : false}\r\n          onChange={onChange}\r\n        />\r\n        <Form.Input\r\n          label=\"Confirm Password\"\r\n          placeholder=\"Confirm Password..\"\r\n          name=\"confirmPassword\"\r\n          type=\"password\"\r\n          value={values.confirmPassword}\r\n          error={errors.confirmPassword ? true : false}\r\n          onChange={onChange}\r\n        />\r\n        <Button type=\"submit\" primary>\r\n          Register\r\n        </Button>\r\n      </Form>\r\n      {Object.keys(errors).length > 0 && (\r\n        <div className=\"ui error message\">\r\n          <ul className=\"list\">\r\n            {Object.values(errors).map((value) => (\r\n              <li key={value}>{value}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst REGISTER_USER = gql`\r\n  mutation register(\r\n    $username: String!\r\n    $email: String!\r\n    $password: String!\r\n    $confirmPassword: String!\r\n  ) {\r\n    register(\r\n      registerInput: {\r\n        username: $username\r\n        email: $email\r\n        password: $password\r\n        confirmPassword: $confirmPassword\r\n      }\r\n    ) {\r\n      id\r\n      email\r\n      username\r\n      createdAt\r\n      token\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Register;\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { Container } from \"semantic-ui-react\";\n\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"./App.css\";\n\nimport { AuthProvider } from \"./context/auth\";\nimport AuthRoute from \"./util/AuthRoute\";\n\nimport MenuBar from \"./components/MenuBar\";\nimport Home from \"./pages/Home\";\nimport Login from \"./pages/Login\";\nimport Register from \"./pages/Register\";\n\nfunction App() {\n  return (\n    <AuthProvider>\n      <Router basename={process.env.PUBLIC_URL}>\n        <Container>\n          <MenuBar />\n          <Route Route exact path=\"/\" component={Home} />\n          <AuthRoute exact path=\"/login\" component={Login} />\n          <AuthRoute exact path=\"/register\" component={Register} />\n        </Container>\n      </Router>\n    </AuthProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\r\nimport App from \"./App\";\r\nimport {\r\n  ApolloClient,\r\n  InMemoryCache,\r\n  ApolloProvider,\r\n  createHttpLink,\r\n} from \"@apollo/client\";\r\nimport { setContext } from \"apollo-link-context\";\r\n\r\nconst httpLink = createHttpLink({\r\n  uri: \"https://todoadd.herokuapp.com/\",\r\n});\r\n\r\nconst authLink = setContext(() => {\r\n  const token = localStorage.getItem(\"jwtToken\");\r\n  return {\r\n    headers: {\r\n      Authorization: token ? `Bearer ${token}` : \"\",\r\n    },\r\n  };\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link: authLink.concat(httpLink),\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nexport default (\r\n  <ApolloProvider client={client}>\r\n    <App />\r\n  </ApolloProvider>\r\n);\r\n","import ReactDOM from 'react-dom'\n\nimport ApolloProvider from \"./ApolloProvider\"\n\nReactDOM.render(ApolloProvider, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}